#!/bin/bash

# Verificar se o script está sendo executado como root
if [ "$(id -u)" -ne "0" ]; then
    echo "Este script deve ser executado como root."
    exit 1
fi

echo "Iniciando configuração do Whaticket-Saas-2024..."

# Atualizar o sistema
apt update && apt upgrade -y

# Instalar dependências do sistema
apt install -y sudo git curl nginx software-properties-common

# Instalar Certbot para SSL
add-apt-repository ppa:certbot/certbot -y
apt update
apt install -y certbot python3-certbot-nginx

# Configurar o banco de dados MySQL
echo "Configurando o MySQL..."
mysql -u root -e "
CREATE DATABASE whaticket;
CREATE USER 'macb'@'localhost' IDENTIFIED BY 'b18073518B@123';
GRANT ALL PRIVILEGES ON whaticket.* TO 'macb'@'localhost';
FLUSH PRIVILEGES;"

# Configuração dos arquivos .env do backend e frontend
echo "Configurando arquivos .env..."
cd backend
cp .env.example .env
sed -i 's/DB_USER=root/DB_USER=macb/g' .env
sed -i 's/DB_PASS=/DB_PASS=b18073518B@123/g' .env
sed -i 's/DB_NAME=whaticket/DB_NAME=whaticket/g' .env
sed -i 's#BACKEND_URL=http://localhost:3333#BACKEND_URL=https://api.macbvendas.com.br#g' .env

cd ../frontend
cp .env.example .env
sed -i 's#REACT_APP_BACKEND_URL=http://localhost:3333#REACT_APP_BACKEND_URL=https://api.macbvendas.com.br#g' .env

# Construir o frontend
echo "Construindo o frontend..."
cd ../frontend
npm install
npm run build

# Configurar Nginx
echo "Configurando o Nginx..."
cd ../
cat > /etc/nginx/sites-available/whaticket <<EOL
server {
    listen 80;
    server_name app.macbvendas.com.br api.macbvendas.com.br;

    location / {
        return 301 https://\$host\$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name app.macbvendas.com.br;

    ssl_certificate /etc/letsencrypt/live/app.macbvendas.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.macbvendas.com.br/privkey.pem;

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_cache_bypass \$http_upgrade;
    }
}

server {
    listen 443 ssl;
    server_name api.macbvendas.com.br;

    ssl_certificate /etc/letsencrypt/live/api.macbvendas.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.macbvendas.com.br/privkey.pem;

    location / {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host \$host;
        proxy_cache_bypass \$http_upgrade;
    }
}
EOL

# Obter certificados SSL
echo "Obtendo certificados SSL..."
certbot --nginx -d app.macbvendas.com.br -d api.macbvendas.com.br

# Ativar configuração do Nginx e reiniciar
ln -s /etc/nginx/sites-available/whaticket /etc/nginx/sites-enabled/
nginx -t
systemctl restart nginx

# Iniciar os serviços do backend e frontend
echo "Iniciando os serviços..."
cd backend
systemctl start whaticket-backend

cd ../frontend
systemctl start whaticket-frontend

echo "Configuração completa. Acesse o frontend em https://app.macbvendas.com.br e o backend em https://api.macbvendas.com.br."
